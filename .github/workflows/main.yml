name: 'BUILD'

on:
  workflow_dispatch:

env:
  CACHE_REVISION: '006'
  CEF_BUILD_VERSION_MAC: '5060'
  CEF_HASH_MAC_X86_64: '88b950aa0bfc001061c35e7f1f3fefba856a6afb35e38b2b7b42ddd8dd239182'
  CEF_HASH_MAC_ARM64: '98679b92eea6ea9959ac5aa54f46ca60681d8a86c768c35f496dbdd409bf0642'
  CEF_BUILD_VERSION_LINUX: '5060'
  CEF_BUILD_VERSION_WIN: '5060'
  QT_VERSION_MAC: '6.4.1'
  QT_HASH_MAC_X86_64: 'c5ed7bc9f6e802910ec539066bcf0a8d64100fafce568071f264c88c22c5859b'
  QT_HASH_MAC_ARM64: '1ce472fd1e28f947456b72b1d7ab929d6e93cb774c2928e22eca9bb751b12ccf'
  QT_HASH_MAC_UNIVERSAL: '873f7c9c9f7fcee740a79c075b32a505c932c816d928807fa16f3439c610fbfd'
  QT_VERSION_WIN: '6.4.1'
  DEPS_VERSION_MAC: '2022-11-21'
  DEPS_HASH_MAC_X86_64: 'ed0a145e88496f8975da14a07939dbe5633e60510aada34509a4aef64a66e438'
  DEPS_HASH_MAC_ARM64: 'f397dc524e5ee7f85684f0b9661c45957446e28d166fcd6dfacf895c9d4d2521'
  DEPS_VERSION_WIN: '2022-11-21'
  VLC_VERSION_MAC: '3.0.8'
  VLC_HASH_MAC: 'e0149ef4a20a19b9ecd87309c2d27787ee3f47dfd47c6639644bc1f6fd95bdf6'
  VLC_VERSION_WIN: '3.0.0-git'
  TWITCH_CLIENTID: ${{ secrets.TWITCH_CLIENT_ID }}
  TWITCH_HASH: ${{ secrets.TWITCH_HASH }}
  RESTREAM_CLIENTID: ${{ secrets.RESTREAM_CLIENTID }}
  RESTREAM_HASH: ${{ secrets.RESTREAM_HASH }}
  YOUTUBE_CLIENTID: ${{ secrets.YOUTUBE_CLIENTID }}
  YOUTUBE_CLIENTID_HASH: ${{ secrets.YOUTUBE_CLIENTID_HASH }}
  YOUTUBE_SECRET: ${{ secrets.YOUTUBE_SECRET }}
  YOUTUBE_SECRET_HASH: ${{ secrets.YOUTUBE_SECRET_HASH }}

jobs:
  windows_arm64_build:
    name: "02 - Windows on ARM64"
    runs-on: [windows-2022]
    if: always()
    strategy:
      matrix:
        arch: [ARM64]
    env:
      CMAKE_GENERATOR: 'Visual Studio 17 2022'
      VIRTUALCAM-GUID: 'A3FCE0F5-3493-419F-958A-ABA1250EC20B'
      BUILD_FOR_DISTRIBUTION: ${{ startsWith(github.ref, 'refs/tags/') && github.event_name != 'pull_request' }}
    defaults:
      run:
        working-directory: 'obs-studio'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          path: 'obs-studio'
          fetch-depth: 0

      - name: 'Add msbuild to PATH'
        uses: microsoft/setup-msbuild@v1.1

      - name: 'Check for Github Labels'
        if: github.event_name == 'pull_request'
        run: |
          $LabelFound = try { (Invoke-RestMethod -Authentication 'Bearer' -Token (ConvertTo-SecureString '${{ secrets.GITHUB_TOKEN }}' -AsPlainText) -Uri "${{ github.event.pull_request.url }}" -UseBasicParsing).labels.name.contains("Seeking Testers") } catch { $false }
          Write-Output "SEEKING_TESTERS=$(if( $LabelFound -eq $true ) { 1 } else { 0 })" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
      - name: Setup Environment
        id: setup
        run: |
          $CommitHash = git rev-parse --short=9 HEAD
          Write-Output "::set-output name=commitHash::${CommitHash}"
      - name: 'Install prerequisite: Pre-built dependencies'
        run: |
          curl -kL https://github.com/tommyvct/obs-deps/releases/latest/download/DepsARM64.zip -f --retry 5 -o DepsARM64.zip
          7z x DepsARM64.zip -o"${{ github.workspace }}/cmbuild/"
      - name: "Configure"
        run: |
          mkdir ./build64
          cd ./build64
          cmake -G"${{ env.CMAKE_GENERATOR }}" -A"ARM64" -DDepsPath="${{ github.workspace }}/cmbuild/DepsARM64" -DQTDIR="${{ github.workspace }}/cmbuild/DepsARM64/qt/" -DENABLE_VIRTUALCAM=ON -DVIRTUALCAM_GUID=${{ env.VIRTUALCAM-GUID }} -DBUILD_AMD_ENCODER=OFF -DENABLE_QSV11=OFF -DENABLE_SCRIPTING=ON -DENABLE_SCRIPTING_LUA=OFF -DPYTHON_LIB="${{ github.workspace }}/cmbuild/DepsARM64/bin/python310.lib" -DENABLE_BROWSER_SOURCE=ON -DCEF_ROOT_DIR="${{ github.workspace }}/cmbuild/DepsARM64/cef" -DENABLE_D3D12_HOOK=true -DVulkan_INCLUDE_DIR="${{ github.workspace }}/cmbuild/DepsARM64/VulkanSDK/include" -DVulkan_LIBRARY="${{ github.workspace }}/cmbuild/DepsARM64/VulkanSDK/vulkan-1.lib" -DENABLE_AJA=OFF -DTWITCH_CLIENTID='${{ env.TWITCH_CLIENTID }}' -DTWITCH_HASH='${{ env.TWITCH_HASH }}' -DRESTREAM_CLIENTID='${{ env.RESTREAM_CLIENTID }}' -DRESTREAM_HASH='${{ env.RESTREAM_HASH }}' ..
      
      - name: 'Build'
        run: msbuild /m /p:Configuration=RelWithDebInfo .\build64\obs-studio.sln

      - name: 'Package'
        if: success() && (github.event_name != 'pull_request' || env.SEEKING_TESTERS == '1')
        run: |
          $env:FILE_DATE=(Get-Date -UFormat "%F")
          $env:FILE_NAME="${env:FILE_DATE}-${{ env.OBS_GIT_HASH }}-${{ env.OBS_GIT_TAG }}-windows_arm64"
          echo "FILE_NAME=${env:FILE_NAME}" >> ${env:GITHUB_ENV}
          robocopy .\build64\rundir\RelWithDebInfo .\build\ /E /XF .gitignore
          7z
      - name: 'Publish'
        if: success() && (github.event_name != 'pull_request' || env.SEEKING_TESTERS == '1')
        uses: actions/upload-artifact@v2.2.0
        with:
          name: '${{ env.FILE_NAME }}'
          path: build/*
